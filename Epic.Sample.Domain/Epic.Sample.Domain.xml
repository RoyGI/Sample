<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Epic.Sample.Domain</name>
    </assembly>
    <members>
        <member name="T:Epic.Sample.Domain.Entities.Entity">
            <summary>
                The entity is the abstract class for every domain class
            </summary>
            <summary>
            Class Entity.
            </summary>
            <autogeneratedoc />
        </member>
        <member name="P:Epic.Sample.Domain.Entities.Entity.Id">
            <summary>
            sets or gets the id of the entities
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Epic.Sample.Domain.Entities.Entity.Identity">
            <summary>
            Gets the identity.
            </summary>
            <value>The identity.</value>
            <autogeneratedoc />
        </member>
        <member name="T:Epic.Sample.Domain.Entities.Product">
            <summary>
                The product class
            </summary>
            <summary>
            Class Product.
            Implements the <see cref="T:Epic.Sample.Domain.Entities.Entity" />
            </summary>
            <seealso cref="T:Epic.Sample.Domain.Entities.Entity" />
            <autogeneratedoc />
        </member>
        <member name="P:Epic.Sample.Domain.Entities.Product.Name">
            <summary>
                sets or gets the name
            </summary>
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
            <autogeneratedoc />
        </member>
        <member name="P:Epic.Sample.Domain.Entities.Product.Price">
            <summary>
                sets or gets the price
            </summary>
            <summary>
            Gets or sets the price.
            </summary>
            <value>The price.</value>
            <autogeneratedoc />
        </member>
        <member name="P:Epic.Sample.Domain.Entities.Product.Quantity">
            <summary>
            sets or gets the quantity
            </summary>
            <value>The quantity.</value>
        </member>
        <member name="T:Epic.Sample.Domain.Repository.IProductRepository">
            <summary>
            Interface IProductRepository
            </summary>
            <autogeneratedoc />
        </member>
        <member name="M:Epic.Sample.Domain.Repository.IProductRepository.Delete(System.Guid)">
            <summary>
            Deletes the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <autogeneratedoc />
        </member>
        <member name="M:Epic.Sample.Domain.Repository.IProductRepository.Find(System.Linq.Expressions.Expression{System.Func{Epic.Sample.Domain.Entities.Product,System.Boolean}})">
            <summary>
            Finds the specified query.
            </summary>
            <param name="query">The query.</param>
            <returns>Product.</returns>
            <autogeneratedoc />
        </member>
        <member name="M:Epic.Sample.Domain.Repository.IProductRepository.FindAll(System.Linq.Expressions.Expression{System.Func{Epic.Sample.Domain.Entities.Product,System.Boolean}})">
            <summary>
            Finds all.
            </summary>
            <param name="query">The query.</param>
            <returns>IEnumerable Product .</returns>
            <autogeneratedoc />
        </member>
        <member name="M:Epic.Sample.Domain.Repository.IProductRepository.FindAll">
            <summary>
            Finds all.
            </summary>
            <returns>IEnumerable Product.</returns>
            <autogeneratedoc />
        </member>
        <member name="M:Epic.Sample.Domain.Repository.IProductRepository.Save(Epic.Sample.Domain.Entities.Product)">
            <summary>
            Saves the specified product.
            </summary>
            <param name="product">The product.</param>
            <autogeneratedoc />
        </member>
        <member name="M:Epic.Sample.Domain.Repository.IProductRepository.Update(Epic.Sample.Domain.Entities.Product)">
            <summary>
            Updates the specified product.
            </summary>
            <param name="product">The product.</param>
            <autogeneratedoc />
        </member>
        <member name="T:Epic.Sample.Domain.Repository.IUnitOfWork">
            <summary>
            Interface IUnitOfWork
            Implements the <see cref="T:System.IDisposable" />
            </summary>
            <seealso cref="T:System.IDisposable" />
            <autogeneratedoc />
        </member>
        <member name="M:Epic.Sample.Domain.Repository.IUnitOfWork.Commit">
            <summary>
            Commits this instance.
            </summary>
            <autogeneratedoc />
        </member>
        <member name="M:Epic.Sample.Domain.Repository.IUnitOfWork.Repository``1">
            <summary>
            Repositories this instance.
            </summary>
            <typeparam name="T">The type of the repository</typeparam>
            <returns>The repository type T.</returns>
            <autogeneratedoc />
        </member>
        <member name="T:Epic.Sample.Domain.Services.IProductService">
            <summary>
            Interface IProductService
            </summary>
            <autogeneratedoc />
        </member>
    </members>
</doc>
